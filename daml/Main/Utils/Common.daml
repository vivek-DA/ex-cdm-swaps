-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module Main.Utils.Common where

import DA.Date
import Main.Types

createCidD : (Template a) => ContractId a  -> Update (ContractIdData a)
createCidD dCid = do
  d <- fetch dCid
  return ContractIdData with ..

-- | Try to get value from optional (fails if None)
fromSomeTry : Text -> Optional a -> Update a
fromSomeTry _ (Some x) = return x
fromSomeTry msg None = abort msg

-- | Try to get head from list (fails if empty)
headTry : Text -> [a] -> Update a
headTry _ (x::_) = return x
headTry msg [] = abort msg

-- | Assert if date is on or after a given date
assertOnOrAfterDateMsg : (CanAbort m, HasTime m) => Text -> Date -> m ()
assertOnOrAfterDateMsg msg date = do
  now <- getTime
  assertMsg msg $ date <= toDateUTC now

-- | Fetch and archive a contract
fetchAndArchive : Template a => ContractId a -> Update a
fetchAndArchive cid = do
  c <- fetch cid
  archive cid
  return c
